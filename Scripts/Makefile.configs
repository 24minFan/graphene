MAKEFILE_CONFIGS_DIR := $(dir $(lastword $(MAKEFILE_LIST)))

ifeq ($(origin CC),default)
CC	= gcc
endif
ifeq ($(origin AS),default)
AS	= gcc
endif
ifeq ($(origin AR),default)
AR	= ar
endif
ifeq ($(origin ARFLAGS),default)
ARFLAGS = rcs
endif
ifeq ($(origin LD),default)
LD	= ld
endif
ifeq ($(origin CXX),default)
CXX = g++
endif
OBJCOPY ?= objcopy

SYS ?= $(shell $(CC) -dumpmachine)
export SYS

CFLAGS += -Wall -std=c11
CXXFLAGS += -Wall -std=c++14

DEBUG ?=
export DEBUG

# make DEBUG=0 synonym for undefined DEBUG
ifeq ($(DEBUG),0)
override DEBUG =
endif

ifeq ($(DEBUG),)
# -O2: yes -DDEBUG: no
CFLAGS += -O2
CXXFLAGS += -O2
else ifeq ($(DEBUG),1)
# -O2: no -DDEBUG: yes
CFLAGS += -gdwarf-2 -g3
CXXFLAGS += -gdwarf-2 -g3
CFLAGS += -DDEBUG
ASFLAGS += -DDEBUG
else ifeq ($(DEBUG),2)
# -O2: yes -DDEBUG: yes
CFLAGS += -O2 -gdwarf-2 -g3
CXXFLAGS += -O2 -gdwarf-2 -g3
CFLAGS += -DDEBUG
ASFLAGS += -DDEBUG
# other makefiles assume only DEBUG=1 for debug
override DEBUG = 1
else
$(error unknown DEBUG value "$(DEBUG)")
endif

ifeq ($(WERROR),1)
CFLAGS += -Werror
CXXFLAGS += -Werror
endif

ifeq ($(PROFILING),1)
CFLAGS += -DPROFILING=1
endif

MAKEFILE_CONFIGS_INCLUDED = y
include $(MAKEFILE_CONFIGS_DIR)/Makefile.Host
